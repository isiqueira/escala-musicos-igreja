generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Church {
  id                String    @id @default(uuid())
  name              String
  location          String?
  schedules         Schedule[]
  recurringSchedules RecurringSchedule[]
}

model Musician {
  id                String    @id @default(uuid())
  name              String
  email             String?   @unique
  phone             String?
  whatsapp_id       String?
  is_active         Boolean   @default(true)
  recurring_schedules RecurringSchedule[]
  schedules         Schedule[]
  substitute_schedules Schedule[] @relation("Substitutes")
  whatsapp_messages WhatsAppMessage[]
}

model Schedule {
  id               String    @id @default(uuid())
  date             DateTime
  musician_id      String
  substitute_id    String?
  church_id        String
  musician         Musician  @relation(fields: [musician_id], references: [id])
  substitute       Musician? @relation("Substitutes", fields: [substitute_id], references: [id])
  church           Church    @relation(fields: [church_id], references: [id])
  recurring_schedule RecurringSchedule? @relation(fields: [recurring_scheduleid], references: [id])
  recurring_scheduleid String?
}

model RecurringSchedule {
  id              String   @id @default(uuid())
  day_of_week     Int
  time            String
  musician_id     String
  church_id       String
  musician        Musician  @relation(fields: [musician_id], references: [id])
  church          Church    @relation(fields: [church_id], references: [id])
  schedules       Schedule[]
}

model WhatsAppMessage {
  id              String    @id @default(uuid())
  musician_id     String
  message         String
  sent_at         DateTime
  musician        Musician  @relation(fields: [musician_id], references: [id])
}
